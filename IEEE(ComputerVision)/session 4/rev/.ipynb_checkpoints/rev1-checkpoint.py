import cv2import matplotlib.pyplot as pltimport numpy as np# read imgsimg_boat = cv2.imread("Photos/boat.jpg")imgMoon = cv2.imread("Photos/Moon.jpg")imgEhab = cv2.imread("Photos/Ehab.jpg")img2 = cv2.imread("Photos/Strawberries.jpg")#Convert BGR to RGBimg2 = cv2.cvtColor(img2,cv2.COLOR_BGR2RGB)#resizingimg_boat = cv2.resize(img_boat , (700,300))imgMoon = cv2.resize(imgMoon , (1050,1000))###########################################arithmetic operationsM1 = np.ones(img_boat.shape,dtype="uint8")*100M2 = np.ones(img_boat.shape,dtype="uint8")*50# print("Matrix",M1.shape)## imgAdd = cv2.add(M1 , img_boat)# imgsub = cv2.subtract(M2 , img_boat)##########################################Convert img to Black imgimgB = img_boat * np.zeros(img_boat.shape , dtype="uint8")#shape of imgs# print("boat",img_boat.shape)# print(img_boat.ndim)# print("Before", img_boat)## print("After",imgAdd)# print("After2",imgsub)#show imgscv2.imshow("imgBoat",img_boat)cv2.imshow("imgADD",imgAdd)cv2.imshow("img2",img2)cv2.imshow("ImageSub" , imgsub)cv2.imshow("black" , imgB)cv2.waitKey(0)# show img using pltplt.imshow(img2)plt.show()# save imgscv2.imwrite("Photos/Strawberries2.png",img2)cv2.waitKey(0)# read imgs# Black_White = cv2.imread("Photos/Black_White.png")# Black_White2 = cv2.imread("Photos/Black_White2.png")# boat = cv2.imread("Photos/boat.jpg")# Red = cv2.imread("Photos/RED.png")#Scaling the images# Rred = cv2.resize(Red , (720 , 600))# Rboat = cv2.resize(boat , (720 , 600))# Arithmetic operations# add = cv2.add(Rboat , Rred)# sub = cv2.subtract(Rboat ,Rred )# Mul = cv2.multiply(Rboat ,Rred)# div = cv2.divide(Rboat ,Rred)## cv2.imshow("Frame1" , add)# cv2.imshow("Frame2" , Rboat)# cv2.imshow("Frame 3" , sub)# cv2.imshow("Frame4" , Mul)# cv2.imshow("Frame 5" , div)# if cv2.waitKey(0) == ord('q'):#     cv2.destroyAllWindows()## Logical opreations# imgAnd = cv2.bitwise_and(Black_White, Black_White2)# imgOR = cv2.bitwise_or(Black_White, Black_White2)# imgNot = cv2.bitwise_not(Black_White)# XORimg = cv2.bitwise_xor(Black_White, Black_White2)# NOTimg1 = cv2.bitwise_not(Black_White)# NOTimg2 = cv2.bitwise_not(Black_White2)